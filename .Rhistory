qqline(food.desert$PovertyRate)
outlierKD2(food.desert, PovertyRate, FALSE)
# When we subset our data to only census tracts that are located in food deserts the mean is 26.97 which means about 27% of households located in a food desert   are at or below the federal poverty rate. Furthermore, when we use this subset to take out outliers we only have 36 outliers and the mean changes from 26.97 to 25.42 so there is no signifcant change in removing outliers within this subset. However, within this subset after we move the outliers we can see that our   histogram is more normally distributed. With outliers our distribution is skewed to the right like it is without subsetting the data.
#Population or POP2010 Normality Test
summary(food$POP2010)
hist(food$POP2010, main="Histogram of Population in Tract", xlab="Population", col="red")
qqnorm(food$POP2010, main="Q-Q Plot of Tract Population")
qqline(food$POP2010)
# We can tell from our Histogram and Q-Q plot that the distributon of the population is skewed to righly skewed and does not have any since of normality.
# Population Normality Test of only areas with Food Deserts
hist(food.desert$POP2010, main="Histogram of Population of Tract in Food Desert", xlab="Population", col="yellow")
qqnorm(food.desert$POP2010, main="Q-Q Plot of Food Desert Population Tract")
qqline(food.desert$POP2010)
summary(food.desert$POP2010)
# When looking at the normality of the population distribution when the tract is located in a food desert the Q-Q plot seems to resemeble more of a straight line but the histogram is still slighly skewed to the right. However, the minimum, maximum, median, and mean values change significanlty when reviewing the population of a tract in a food desert versus not.
# Finding Outliers
outlierKD2(food, POP2010, rm=FALSE)
outlierKD2(food.desert, POP2010, rm=FALSE)
# When looking at these results we can see that when we remove our outliers the data become significantly more normally distributed even though our mean with outliers is 4,270 and without otuliers the mean is 4,131. This is not a huge different but the because of the drastic shape in our histogram and bellcurve, it might be worth removing the outliers in our population variable. When looking at the outliers in locations that are considered food deserts our mean with outliers is 4,360 and without outliers is 4,254. Though with and without outliers our distribution is slightly skewed to the right it is a bit more noramlly distributed without outliers just like it is in food deserts and non-deserts.
hist(food$OHU2010, main="Histogram of Housing Units", xlab="Housing", col="orange")
qqnorm(food$OHU2010, main="Q-Q Plot of Housing Units")
qqline(food$OHU2010)
# When we are looking at our results of the total occupied housing units in the tracts we can see that the data points are righly skewed.
# Occupied Housing Normality for only food deserts
hist(food.desert$OHU2010, main="Histogram of Housing Units in Food Deserts", xlab="Housing in Food Desert", col="pink")
qqnorm(food.desert$OHU2010, main="Q-Q Plot of Housing in Food Desert")
qqline(food.desert$OHU2010)
# When we are looking at the total occupied housing units in tracts that are classified as food deserts it seems that the distribution is still slightly skewed to the right. However, the Q-Q plot of this data is definetly more normally distributed in the subset of food desert than the whole data frame.
# Finding Outliers
outlierKD2(food, OHU2010, rm=FALSE)
outlierKD2(food.desert, OHU2010, rm=FALSE)
# When we look at the outliers of the data frame there are 115 total outliers and the mean with the outliers is 1,615 and without outliers the mean is 1,571 so nothing really changes by removing the outliers. Also, with and without outliers are distribution is skewed to the right. When looking at the outliers in our subset that only incldues tracts in food deserts we can see that there are only 10 outliers. The mean with the outliers is 1,605 and without outliers is 1,579 so nothing really changes by removing the outliers. However, our Q-Q plot of the subset of occupied housing units in food deserts resembles more of a straight line that the data points in the data frame. Nonetheless, the subset's distribution is still rightly-skewed.
summary(food$NUMGQTRS)
hist(food$NUMGQTRS, main="Histogram of Group Housing Units", xlab="Group Housing", col="dark green")
qqnorm(food$NUMGQTRS, main="Q-Q Plot of Group Housing Units")
qqline(food$NUMGQTRS)
# Group Housing units distribution is not normal. It is skewed righ, but barely skewed right. The Q-Q Plot does not even slightly resemeble a straight line.
# Group Housing Normality for only food deserts
hist(food.desert$NUMGQTRS, main="Histogram of Group Housing Units in Food Deserts", xlab=" Group Housing in Food Desert", col="light blue ")
qqnorm(food.desert$OHU2010, main="Q-Q Plot of Housing in Food Desert")
qqline(food.desert$OHU2010)
# When we take the subset of group hosuing units only located in food deserts the distribution improves a bit more at least with our Q-Q plot. However, the histogram still resembles a right-skewed distribution.
# Finding Outliers
outlierKD2(food, NUMGQTRS, rm=FALSE)
outlierKD2(food.desert, NUMGQTRS, rm=FALSE)
# When we look at the group housing outliers in the data frame there are 831. The mean of the data with the outliers is 110 and without the outliers the mean is 24. This is a pretty big drop in the mean than from the other variables that we have seen, but nonetheless the data still has a right-skewed distribution and would yield the same results. When we are looking at the outliers from the subset of group housing units in food deserts the mean also has a big drop. With the outliers the mean is 200 and without outliers the mean is 42. However, the distribution is still right-skewed and would yield the same results.
summary(food$MedianFamilyIncome)
hist(food$MedianFamilyIncome, main="Histogram of Median Family Income", col="dark blue")
qqnorm(food$MedianFamilyIncome, main="Q-Q Plot of Median Family Income")
qqline(food$MedianFamilyIncome)
# The median family income for the data frame is right-skewed. Though the Q-Q plot resembles a straight line representing some type of normality in the distribution.
# Median Family Income of only Food Deserts
hist(food.desert$MedianFamilyIncome, main="Histogram of Median Family Income in Food Deserts", col="dark red")
qqnorm(food.desert$MedianFamilyIncome, main="Q-Q Plot of Median Family Income in Food Deserts")
qqline(food.desert$MedianFamilyIncome)
# When looking at the distribution of the median family income for tracts that are located in food deserts again we can see that the distribution is right-skewed or positive. The Q-Q plot does resemble a striaght line showcasing a resembles of a normal distribution.
#Finding Outliers
outlierKD2(food, MedianFamilyIncome, rm=FALSE)
outlierKD2(food.desert, MedianFamilyIncome, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
summary(food$TractLOWI)
hist(food$TractLOWI, main="Histogram of Low-Income Population", col="light green")
qqnorm(food$TractLOWI, main="Q-Q Plot of Low-Income Population")
qqline(food$TractLOWI)
# The low-income population for the data frame is right-skewed. The Q-Q plot resembles reflects the histogram's distribution and is right-skewed or positive.
# Low-Income Population of only Food Deserts
hist(food.desert$TractLOWI, main="Histogram of Low-Income Population in Food Deserts", col="red")
qqnorm(food.desert$TractLOWI, main="Q-Q Plot of   Low-Income Population in Food Deserts")
qqline(food.desert$TractLOWI)
# The low-income population for the subset of food deserts is right-skewed. The Q-Q plot resembles reflects the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractLOWI, rm=FALSE)
outlierKD2(food.desert, TractLOWI, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractKids, main="Histogram of Kid Count", col="purple")
qqnorm(food$TractKids, main="Q-Q Plot of Kid Count in Tract")
qqline(food$TractKids)
# The number of kids in a census tract for the data frame is right-skewed. The Q-Q plot resembles  the histogram's distribution and is right-skewed or positive.
# Kid Count of only Food Deserts
hist(food.desert$TractKids, main="Histogram of Kid Count in Food Deserts", col="yellow")
qqnorm(food.desert$TractKids, main="Q-Q Plot of Kid Count Population in Food Deserts")
qqline(food.desert$TractKids)
# The kid count for the subset of food deserts is right-skewed. The Q-Q plot resembles  the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractKids, rm=FALSE)
outlierKD2(food.desert, TractKids, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractSeniors, main="Histogram of Seniors in Tract", col="brown")
qqnorm(food$TractSeniors, main="Q-Q Plot of Seniors in Tract")
qqline(food$TractSeniors)
# The number of seniors in  the data frame is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
# Low-Income Population of only Food Deserts
hist(food.desert$TractSeniors, main="Histogram of Seniors in Food Deserts", col="pink")
qqnorm(food.desert$TractSeniors, main="Q-Q Plot of Seniors in Food Deserts")
qqline(food.desert$TractSeniors)
# The number of seniors for the subset of food deserts is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractSeniors, rm=FALSE)
outlierKD2(food.desert, TractSeniors, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
summary(food$TractWhite)
hist(food$TractWhite, main="Histogram of White Population", col="orange")
qqnorm(food$TractWhite, main="Q-Q Plot of White Population")
qqline(food$TractWhite)
# The white population for the data frame is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
# White Populatin in only Food Deserts
hist(food.desert$TractWhite, main="Histogram of White Population in Food Deserts", col="dark green")
qqnorm(food.desert$TractWhite, main="Q-Q Plot of White Population in Food Deserts")
qqline(food.desert$TractWhite)
# The white population for the subset of food deserts is right-skewed. The Q-Q plot resembles reflects the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractLOWI, rm=FALSE)
outlierKD2(food.desert, TractLOWI, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractBlack, main="Histogram of Black Population", col="dark red")
qqnorm(food$TractBlack, main="Q-Q Plot of Black Population")
qqline(food$TractBlack)
# The black population for the data frame is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
# Black Population of only Food Deserts
hist(food.desert$TractBlack, main="Histogram of Black Population in Food Deserts", col="red")
qqnorm(food.desert$TractBlack, main="Q-Q Plot of Black Population in Food Deserts")
qqline(food.desert$TractBlack)
# The black population for the subset of food deserts is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractBlack, rm=FALSE)
outlierKD2(food.desert, TractBlack, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractAsian, main="Histogram of Asian Population", col="dark orange")
qqnorm(food$TractAsian, main="Q-Q Plot of Asian Population")
qqline(food$TractAsian)
# The Asian population for the data frame is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
# Asian Population of only Food Deserts
hist(food.desert$TractAsian, main="Histogram of Asian Population in Food Deserts", col="green")
qqnorm(food.desert$TractAsian, main="Q-Q Plot of Asian Population in Food Deserts")
qqline(food.desert$TractAsian)
# The Asian population for the subset of food deserts is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractAsian, rm=FALSE)
outlierKD2(food.desert, TractAsian, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractNHOPI, main="Histogram of Native Hawaiian or Pacific Islander  Population", col="blue")
qqnorm(food$TractNHOPI, main="Q-Q Plot of Native Hawaiian or Pacific Islander Population")
qqline(food$TractNHOPI)
# The Native Hawaiian or Pacific Islander population for the data frame is right-skewed. The Q-Q plot resembles reflects the histogram's distribution and is right-skewed or positive.
# Native Hawaiian or Pacific Islander Population in only Food Deserts
hist(food.desert$TractNHOPI, main="Histogram of Native Hawaiian or Pacific Islander Population in Food Deserts", col="light blue")
qqnorm(food.desert$TractNHOPI, main="Q-Q Plot of Native Hawaiian or Pacific Islander Population in Food Deserts")
qqline(food.desert$TractNHOPI)
# The Native Hawaiian or Pacific Islander population for the subset of food deserts is right-skewed. The Q-Q plot resembles reflects the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food, TractNHOPI, rm=FALSE)
outlierKD2(food.desert, TractNHOPI, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractAIAN, main="Histogram of American Indian and Alaskan Native Population", col="orange")
qqnorm(food$TractAIAN, main="Q-Q Plot of American Indian and Alaskan Native Population")
qqline(food$TractAIAN)
# The American Indian and Alaskan Native populatio for the data frame is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
# American Indian and Alaskan Native Population in only Food Deserts
hist(food.desert$TractAIAN, main="Histogram of American Indian and Alaskan Native Population in Food Deserts", col="red")
qqnorm(food.desert$TractAIAN, main="Q-Q Plot of American Indian and Alaskan Native Population in Food Deserts")
qqline(food.desert$TractAIAN)
# The American Indian and Alaskan Native population for the subset of food deserts is right-skewed. The Q-Q plot resembles the histogram's distribution and is right-skewed or positive.
#Finding Outliers
outlierKD2(food,TractAIAN , rm=FALSE)
outlierKD2(food.desert, TractAIAN, rm=FALSE)
#By removing the outliers from our data frame and the subset that only includes food deserts nothing changes and our distribution is still right-skewed.
hist(food$TractOMultir, main="Histogram of Multiple race/other race population", col="orange")
qqnorm(food$TractOMultir, main="Q-Q Plot of Multiple race/other race population")
qqline(food$TractOMultir)
hist(food.desert$TractOMultir, main="Histogram of Multiple race/other race population in Food Deserts", col="red")
qqnorm(food.desert$TractOMultir, main="Q-Q Plot of Multiple race/other race population in Food Deserts")
qqline(food.desert$TractOMultir)
#Finding Outliers
outlierKD2(food,TractAIAN,rm=FALSE)
outlierKD2(food.desert, TractAIAN, rm=FALSE)
hist(food$TractHispanic, main="Histogram of Hispanic or Latinx population", col="orange")
qqnorm(food$TractHispanic, main="Q-Q Plot of Hispanic or Latinx population")
qqline(food$TractHispanic)
hist(food.desert$TractHispanic, main="Histogram of Hispanic or Latinx population in Food Deserts", col="red")
qqnorm(food.desert$TractHispanic, main="Q-Q Plot of Hispanic or Latinx population in Food Deserts")
qqline(food.desert$TractHispanic)
#Finding Outliers
outlierKD2(food,TractHispanic,rm=FALSE)
outlierKD2(food.desert, TractHispanic, rm=FALSE)
hist(food$TractHUNV, main="Histogram of housing units without access to a vehicle", col="orange")
qqnorm(food$TractHUNV, main="Q-Q Plot of housing units without access to a vehicle")
qqline(food$TractHUNV)
hist(food.desert$TractHUNV, main="Histogram of housing units without access to a vehicle in Food Deserts", col="red")
qqnorm(food.desert$TractHUNV, main="Q-Q Plot of housing units without access to a vehicle in Food Deserts")
qqline(food.desert$TractHUNV)
#Finding Outliers
outlierKD2(food,TractHUNV,rm=FALSE)
outlierKD2(food.desert, TractHUNV, rm=FALSE)
hist(food$TractSNAP, main="Histogram of housing units receiving SNAP benefits", col="orange")
qqnorm(food$TractSNAP, main="Q-Q Plot of housing units receiving SNAP benefits")
qqline(food$TractSNAP)
hist(food.desert$TractSNAP, main="Histogram of housing units receiving SNAP benefits in Food Deserts", col="red")
qqnorm(food.desert$TractSNAP, main="Q-Q Plot of housing units receiving SNAP benefits in Food Deserts")
qqline(food.desert$TractSNAP)
#Finding Outliers
outlierKD2(food,TractSNAP,rm=FALSE)
outlierKD2(food.desert,TractSNAP, rm=FALSE)
ks.test(food$PovertyRate+runif(length(food$PovertyRate),-0.05,0.05),"pnorm",mean=mean(food$PovertyRate),sd=sd(food$PovertyRate))
ks.test(food$POP2010+runif(length(food$POP2010),-0.05,0.05),"pnorm",mean=mean(food$POP2010),sd=sd(food$POP2010))
ks.test(food$OHU2010+runif(length(food$OHU2010),-0.05,0.05),"pnorm",mean=mean(food$OHU2010),sd=sd(food$OHU2010))
ks.test(food$NUMGQTRS+runif(length(food$NUMGQTRS),-0.05,0.05),"pnorm",mean=mean(food$NUMGQTRS),sd=sd(food$NUMGQTRS))
ks.test(food$MedianFamilyIncome+runif(length(food$MedianFamilyIncome),-0.05,0.05),"pnorm",mean=mean(food$MedianFamilyIncome),sd=sd(food$MedianFamilyIncome))
ks.test(food$TractLOWI+runif(length(food$TractLOWI),-0.05,0.05),"pnorm",mean=mean(food$TractLOWI),sd=sd(food$TractLOWI))
ks.test(food$TractKids+runif(length(food$TractKids),-0.05,0.05),"pnorm",mean=mean(food$TractKids),sd=sd(food$TractKids))
ks.test(food$TractSeniors+runif(length(food$TractSeniors),-0.05,0.05),"pnorm",mean=mean(food$TractSeniors),sd=sd(food$TractSeniors))
ks.test(food$TractWhite+runif(length(food$TractWhite),-0.05,0.05),"pnorm",mean=mean(food$TractWhite),sd=sd(food$TractWhite))
ks.test(food$TractBlack+runif(length(food$TractBlack),-0.05,0.05),"pnorm",mean=mean(food$TractBlack),sd=sd(food$TractBlack))
ks.test(food$TractAsian+runif(length(food$TractAsian),-0.05,0.05),"pnorm",mean=mean(food$TractAsian),sd=sd(food$TractAsian))
ks.test(food$TractNHOPI+runif(length(food$TractNHOPI),-0.05,0.05),"pnorm",mean=mean(food$TractNHOPI),sd=sd(food$TractNHOPI))
ks.test(food$TractAIAN+runif(length(food$TractAIAN),-0.05,0.05),"pnorm",mean=mean(food$TractAIAN),sd=sd(food$TractAIAN))
ks.test(food$TractOMultir+runif(length(food$TractOMultir),-0.05,0.05),"pnorm",mean=mean(food$TractOMultir),sd=sd(food$TractOMultir))
ks.test(food$TractHispanic+runif(length(food$TractHispanic),-0.05,0.05),"pnorm",mean=mean(food$TractHispanic),sd=sd(food$TractHispanic))
ks.test(food$TractHUNV+runif(length(food$TractHUNV),-0.05,0.05),"pnorm",mean=mean(food$TractHUNV),sd=sd(food$TractHUNV))
ks.test(food$TractSNAP+runif(length(food$TractSNAP),-0.05,0.05),"pnorm",mean=mean(food$TractSNAP),sd=sd(food$TractSNAP))
### For dataset food.desert
ks.test(food.desert$PovertyRate+runif(length(food.desert$PovertyRate),-0.05,0.05),"pnorm",mean=mean(food.desert$PovertyRate),sd=sd(food.desert$PovertyRate))
ks.test(food.desert$POP2010+runif(length(food.desert$POP2010),-0.05,0.05),"pnorm",mean=mean(food.desert$POP2010),sd=sd(food.desert$POP2010))
ks.test(food.desert$OHU2010+runif(length(food.desert$OHU2010),-0.05,0.05),"pnorm",mean=mean(food.desert$OHU2010),sd=sd(food.desert$OHU2010))
ks.test(food.desert$NUMGQTRS+runif(length(food.desert$NUMGQTRS),-0.05,0.05),"pnorm",mean=mean(food.desert$NUMGQTRS),sd=sd(food.desert$NUMGQTRS))
ks.test(food.desert$MedianFamilyIncome+runif(length(food.desert$MedianFamilyIncome),-0.05,0.05),"pnorm",mean=mean(food.desert$MedianFamilyIncome),sd=sd(food.desert$MedianFamilyIncome))
ks.test(food.desert$TractLOWI+runif(length(food.desert$TractLOWI),-0.05,0.05),"pnorm",mean=mean(food.desert$TractLOWI),sd=sd(food.desert$TractLOWI))
ks.test(food.desert$TractKids+runif(length(food.desert$TractKids),-0.05,0.05),"pnorm",mean=mean(food.desert$TractKids),sd=sd(food.desert$TractKids))
ks.test(food.desert$TractSeniors+runif(length(food.desert$TractSeniors),-0.05,0.05),"pnorm",mean=mean(food.desert$TractSeniors),sd=sd(food.desert$TractSeniors))
ks.test(food.desert$TractWhite+runif(length(food.desert$TractWhite),-0.05,0.05),"pnorm",mean=mean(food.desert$TractWhite),sd=sd(food.desert$TractWhite))
ks.test(food.desert$TractBlack+runif(length(food.desert$TractBlack),-0.05,0.05),"pnorm",mean=mean(food.desert$TractBlack),sd=sd(food.desert$TractBlack))
ks.test(food.desert$TractAsian+runif(length(food.desert$TractAsian),-0.05,0.05),"pnorm",mean=mean(food.desert$TractAsian),sd=sd(food.desert$TractAsian))
ks.test(food.desert$TractNHOPI+runif(length(food.desert$TractNHOPI),-0.05,0.05),"pnorm",mean=mean(food.desert$TractNHOPI),sd=sd(food.desert$TractNHOPI))
ks.test(food.desert$TractAIAN+runif(length(food.desert$TractAIAN),-0.05,0.05),"pnorm",mean=mean(food.desert$TractAIAN),sd=sd(food.desert$TractAIAN))
ks.test(food.desert$TractOMultir+runif(length(food.desert$TractOMultir),-0.05,0.05),"pnorm",mean=mean(food.desert$TractOMultir),sd=sd(food.desert$TractOMultir))
ks.test(food.desert$TractHispanic+runif(length(food.desert$TractHispanic),-0.05,0.05),"pnorm",mean=mean(food.desert$TractHispanic),sd=sd(food.desert$TractHispanic))
ks.test(food.desert$TractHUNV+runif(length(food.desert$TractHUNV),-0.05,0.05),"pnorm",mean=mean(food.desert$TractHUNV),sd=sd(food.desert$TractHUNV))
ks.test(food.desert$TractSNAP+runif(length(food.desert$TractSNAP),-0.05,0.05),"pnorm",mean=mean(food.desert$TractSNAP),sd=sd(food.desert$TractSNAP))
# Contigency Table of Food Deserts and Urban Tract
contable.urban <- table(food$Urban, food$Desert)
xkabledply(contable.urban, title="Contingency Table for Food Deserts in Urban Tracts")
urban.tble <- chisq.test(contable.urban)
urban.tble
urban.tble$expected
xkabledply(urban.tble$expected, title="Cross table for the Expected Frequencies of Food Deserts in Urban Tracts")
exp(urban.tble$p.value)
# Contingency Table of Food Deserts and Geographical Region
contable.region <- table(food$Region, food$Desert)
xkabledply(contable.region, title="Contingency Table for Food Deserts located in Geographical Regions")
region.tble <- chisq.test(contable.region)
region.tble
region.tble$expected
xkabledply(region.tble$expected, title="Cross table for the Expected Frequencies of Food Deserts in Geographical Regions")
# Contingency Table of Food Deserts and States
contable.state <- table(food$State, food$Desert)
xkabledply(contable.state, title="Contingency Table for Food Deserts located in U.S. States")
state.tble <- chisq.test(contable.state)
state.tble
state.tble$expected
state.tble$p.value
xkabledply(state.tble$expected, title="Cross table for the Expected Frequencies of Food Deserts in U.S. Staes")
food_0<-subset(food,Desert==0)
food_1<-subset(food,Desert==1)
### for variable 'POP2010'
t.test(food_0$POP2010,food_1$POP2010)
### for the rest variables
t.test(food_0$OHU2010,food_1$OHU2010)
t.test(food_0$NUMGQTRS,food_1$NUMGQTRS)
t.test(food_0$PovertyRate,food_1$PovertyRate)
t.test(food_0$MedianFamilyIncome,food_1$MedianFamilyIncome)
t.test(food_0$TractLOWI,food_1$TractLOWI)
t.test(food_0$TractKids,food_1$TractKids)
t.test(food_0$TractSeniors,food_1$TractSeniors)
t.test(food_0$TractWhite,food_1$TractWhite)
t.test(food_0$TractBlack,food_1$TractBlack)
t.test(food_0$TractAsian,food_1$TractAsian)
t.test(food_0$TractNHOPI,food_1$TractNHOPI)
t.test(food_0$TractAIAN,food_1$TractAIAN)
t.test(food_0$TractOMultir,food_1$TractOMultir)
t.test(food_0$TractHispanic,food_1$TractHispanic)
t.test(food_0$TractHUNV,food_1$TractHUNV)
t.test(food_0$TractSNAP,food_1$TractSNAP)
food_coronly <- food[c("Desert","POP2010","OHU2010","NUMGQTRS","PovertyRate","MedianFamilyIncome","TractLOWI","TractKids","TractSeniors","TractWhite","TractBlack","TractAsian","TractNHOPI","TractAIAN","TractOMultir","TractHispanic","TractHUNV","TractSNAP")]
corr.food <- cor(food_coronly)
corrplot(corr.food)
# Deciding Best Varaible with Forward Selection and Subsetting
reg.forward <-regsubsets(Desert ~.-CensusTract-State , data = food, nvmax=19, nbest=1, method="forward")
plot(reg.forward, scale = "adjr2", main = "Adjusted R^2")
plot(reg.forward, scale = "Cp", main = "CP")
plot(reg.forward, scale = "bic", main = "BIC")
#model_forward_adjr2<-lm(Desert~.-TractBlack,data = food)
#model_forward_Cp<-lm(Desert~.-TractBlack-TractWhite,data = food)
#model_forward_bic<-lm(Desert~.-TractBlack-TractWhite-OHU2010-TractKids-TractSeniors-TractNHOPI-TractOMultir,data = food)
#summary(model_forward_adjr2)
#summary(model_forward_Cp)
#summary(model_forward_bic)
#anova(model_forward_adjr2,model_forward_Cp)
#anova(model_forward_adjr2,model_forward_bic)
#anova(model_forward_Cp,model_forward_bic)
# Backward Selection
reg.best10.bkwd <- regsubsets(Desert~.-CensusTract-State, data= food, nvmax=19, nbest=1, method="backward")
plot(reg.best10.bkwd, scale = "adjr2", main = "Adjusted R^2")
plot(reg.best10.bkwd, scale = "Cp", main = "CP")
plot(reg.best10.bkwd, scale = "bic", main = "BIC")
model_backward_adjr2<-lm(Desert~.-TractHispanic,data = food)
model_backward_BIC<-lm(Desert~.-MedianFamilyIncome-TractAsian-TractNHOPI-TractHispanic-TractBlack-TractWhite-TractOMultir,data = food)
summary(model_backward_adjr2)
summary(model_backward_BIC)
anova(model_backward_adjr2,model_backward_BIC)
# Sequential Selection
reg.best10.seq <- regsubsets(Desert~.-CensusTract-State-TractHispanic-TractBlack-TractWhite, data= food, nvmax=19, nbest=1, method="seqrep")
plot(reg.best10.seq, scale = "adjr2", main = "Adjusted R^2")
plot(reg.best10.seq, scale = "Cp", main = "CP")
plot(reg.best10.seq, scale = "bic", main = "BIC")
model_seq_adjr2<-lm(Desert~.-CensusTract-State-TractHispanic-TractBlack-TractWhite, data= food)
model_seq_BIC<-lm(Desert~.-CensusTract-State-TractHispanic-TractBlack-TractWhite-TractAsian-TractSNAP, data= food)
summary(model_seq_adjr2)
summary(model_seq_BIC)
anova(model_seq_adjr2,model_seq_BIC)
reg.10.forward <-regsubsets(Desert~.-CensusTract-State, data = food, nvmax=19, nbest=1, method="exhaustive")
plot(reg.10.forward, scale = "adjr2", main = "Adjusted R^2")
plot(reg.10.forward, scale = "Cp", main = "CP")
plot(reg.10.forward, scale = "bic", main = "BIC")
#Correlation Tests on x variables and y
cor.test(food$POP2010, food$Desert)
cor.test(food$TractBlack, food$Desert)
cor.test(food$PovertyRate, food$Desert)
cor.test(food$TractSNAP, food$Desert)
### Model Building
## Change variable 'Desert' to factor variable here and the new dataset is named as newfood now
newfood<-food
newfood$Desertfactor<-as.factor(newfood$Desert)
newfood<-newfood[,-8]
glm_food_int_Desert<-glm(Desert~.-CensusTract,data = food,family = "binomial")
summary(glm_food_int_Desert)
glm_newfood_fac_Desert<-glm(Desertfactor~.-CensusTract-TractHispanic-TractBlack-TractWhite-TractAsian-TractSNAP,data = newfood,family = "binomial")
summary(glm_newfood_fac_Desert)
exp(glm_newfood_fac_Desert$coefficients)
## build an empty and full generalised linear model
emptyglm<-glm(Desertfactor~1,data=newfood,family = binomial)
summary(emptyglm)
fullglm<-glm(Desertfactor~.-CensusTract,data=newfood,family = binomial)
summary(fullglm)
forwards<-step(emptyglm,scope=list(lower=formula(emptyglm),upper=formula(fullglm)),direction = "forward")
formula(forwards)
summary(forwards)
### The output of summary(forwards) indicates that variable 'TractNHOPI' has a p-value is 0.136183
forwards_2<-glm(Desertfactor ~ MedianFamilyIncome + State + Urban + TractLOWI +
TractHUNV + TractHispanic + TractAsian + NUMGQTRS + TractAIAN +
TractKids + TractSNAP + TractSeniors + POP2010 + OHU2010 +
PovertyRate,data=newfood,family = binomial)
summary(forwards_2)
### Backwards
backwards<-step(fullglm,scope=list(lower=formula(emptyglm),upper=formula(fullglm)),direction = "backward")
formula(backwards)
summary(backwards)
### Let's drop the variable 'TractNHOPI' based on the p-value
backwards_2<-glm(Desertfactor ~ State + Urban + POP2010 + OHU2010 + NUMGQTRS +
PovertyRate + MedianFamilyIncome + TractLOWI + TractKids +
TractSeniors + TractAsian + TractAIAN + TractHispanic +
TractHUNV + TractSNAP,data=newfood,family = binomial)
summary(backwards_2)
forwards_2$deviance;backwards_2$deviance
### the two models gave the same deviance, hence backwards_2 is our best generalized linear model for now
### Multicollinearity
vif(backwards_2)
plot(newfood$Desertfactor,predict(backwards_2))
plot(backwards_2)
### back2_logit<-glm(Desertfactor~State + Urban + POP2010 + OHU2010 + NUMGQTRS +
###    PovertyRate + MedianFamilyIncome + TractLOWI + TractKids +
###    TractSeniors + TractAsian + TractAIAN + TractHispanic +
###    TractHUNV + TractSNAP,data=newfood, family = binomial(link = "logit"))
### summary(back2_logit)
###
### No improvements using logit option
### Let's remove variables according to the corrleation matrix, to simplify the process, we chose to set our criterion as 0.8
backwards_2_withoutOHU2010<-glm(Desertfactor ~ State + Urban + POP2010 + NUMGQTRS +
PovertyRate + MedianFamilyIncome + TractLOWI + TractKids +
TractSeniors + TractAsian + TractAIAN + TractHispanic +
TractHUNV + TractSNAP,data=newfood,family = binomial)
summary(backwards_2_withoutOHU2010)
backwards_2_withoutOHU2010$deviance
anova(backwards_2,backwards_2_withoutOHU2010,test = "Chisq")
backwards_2_withoutPOP2010<-glm(Desertfactor ~ State + Urban + OHU2010 + NUMGQTRS +
PovertyRate + MedianFamilyIncome + TractLOWI + TractKids +
TractSeniors + TractAsian + TractAIAN + TractHispanic +
TractHUNV + TractSNAP,data=newfood,family = binomial)
summary(backwards_2_withoutPOP2010)
backwards_2_withoutPOP2010$deviance
anova(backwards_2,backwards_2_withoutPOP2010,test = "Chisq")
backwards_2_withoutTkids<-glm(Desertfactor ~ State + Urban + POP2010 + OHU2010 + NUMGQTRS +
PovertyRate + MedianFamilyIncome + TractLOWI + TractSeniors + TractAsian + TractAIAN + TractHispanic +
TractHUNV + TractSNAP,data=newfood,family = binomial)
summary(backwards_2_withoutTkids)
backwards_2_withoutTkids$deviance
anova(backwards_2,backwards_2_withoutTkids,test = "Chisq")
vcov(backwards_2)
vcov(backwards_2_withoutTkids)
vif(backwards_2_withoutTkids)
### still not showing good vif's
### Based on the deviance, the lowest one is for backwards_2_withoutTkids, we may choose it, but if we check anova()'s result, we see that variable 'TractKids' is good to be kept, our decision depends on the priority comparison between collinearity and model evaluation.
### Check Assumptions of logistic regression
### install.packages("usmap")
### install.packages("ggplot2")
loadPkg("usmap")
loadPkg("ggplot2")
dataforheatmap<-read.csv("E:/gwu/Courses/DATS 6101/project/dataforheatmap.csv")
### install.packages("usmap")
### install.packages("ggplot2")
loadPkg("usmap")
loadPkg("ggplot2")
dataforheatmap<-read.csv("E:/gwu/Courses/DATS 6101/project/dataforheatmap.csv")
library(readr)
dataforheatmap <- read_csv("dataforheatmap.csv")
View(dataforheatmap)
### install.packages("usmap")
### install.packages("ggplot2")
loadPkg("usmap")
loadPkg("ggplot2")
dataforheatmap<-read.csv("E:/gwu/Courses/DATS 6101/project/dataforheatmap.csv")
### install.packages("usmap")
### install.packages("ggplot2")
loadPkg("usmap")
loadPkg("ggplot2")
#dataforheatmap<-read.csv("E:/gwu/Courses/DATS 6101/project/dataforheatmap.csv")
### map for population of different states in dataset 'food'
plot_usmap(data = dataforheatmap, values = "sumpop", color = "red") +
scale_fill_continuous(name = "Population (2010)", label = scales::comma) +
theme(legend.position = "right")
### map for proportion of Desert of different states in dataset 'food'
plot_usmap(data = dataforheatmap, values = "Desertp", color = "red") +
scale_fill_continuous(name = "Food Desert Proportion", label = scales::comma) +
theme(legend.position = "right")
plot_usmap(data = dataforheatmap, values = "Desertp", labels = T, size=0.2) + labs(fill = 'Food Desert Proportion') +   scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90",
guide = guide_colourbar(barwidth = 25, barheight = 0.4,
#put legend title on top of legend
title.position = "top")) +theme(legend.position = "bottom",
legend.title=element_text(size=12),
legend.text=element_text(size=10))
### Model Building
## Change variable 'Desert' to factor variable here and the new dataset is named as newfood now
newfood<-food
newfood$Desertfactor<-as.factor(newfood$Desert)
newfood<-newfood[,-8]
glm_food_int_Desert<-glm(Desert~.-CensusTract,data = food,family = "binomial")
summary(glm_food_int_Desert)
glm_newfood_fac_Desert<-glm(Desertfactor~.-CensusTract-TractHispanic-TractBlack-TractWhite-TractAsian-TractSNAP,data = newfood,family = "binomial")
summary(glm_newfood_fac_Desert)
exp(glm_newfood_fac_Desert$coefficients)
## build an empty and full generalised linear model
emptyglm<-glm(Desertfactor~1,data=newfood,family = binomial)
summary(emptyglm)
fullglm<-glm(Desertfactor~.-CensusTract,data=newfood,family = binomial)
summary(fullglm)
forwards<-step(emptyglm,scope=list(lower=formula(emptyglm),upper=formula(fullglm)),direction = "forward")
### Model Building
## Change variable 'Desert' to factor variable here and the new dataset is named as newfood now
newfood<-food
newfood$Desertfactor<-as.factor(newfood$Desert)
newfood<-newfood[,-8]
glm_food_int_Desert<-glm(Desert~.-CensusTract,data = food,family = "binomial")
summary(glm_food_int_Desert)
glm_newfood_fac_Desert<-glm(Desertfactor~.-CensusTract-TractHispanic-TractBlack-TractWhite-TractAsian-TractSNAP,data = newfood,family = "binomial")
summary(glm_newfood_fac_Desert)
exp(glm_newfood_fac_Desert$coefficients)
## build an empty and full generalised linear model
#emptyglm<-glm(Desertfactor~1,data=newfood,family = binomial)
#summary(emptyglm)
#fullglm<-glm(Desertfactor~.-CensusTract,data=newfood,family = binomial)
#summary(fullglm)
#forwards<-step(emptyglm,scope=list(lower=formula(emptyglm),upper=formula(fullglm)),direction = "forward")
#formula(forwards)
#summary(forwards)
### The output of summary(forwards) indicates that variable 'TractNHOPI' has a p-value is 0.136183
#forwards_2<-glm(Desertfactor ~ MedianFamilyIncome + State + Urban + TractLOWI +
#   TractHUNV + TractHispanic + TractAsian + NUMGQTRS + TractAIAN +
#  TractKids + TractSNAP + TractSeniors + POP2010 + OHU2010 +
#   PovertyRate,data=newfood,family = binomial)
#summary(forwards_2)
### Model Building
## Change variable 'Desert' to factor variable here and the new dataset is named as newfood now
newfood<-food
newfood$Desertfactor<-as.factor(newfood$Desert)
newfood<-newfood[,-8]
glm_food_int_Desert<-glm(Desert~.-CensusTract,data = food,family = "binomial")
summary(glm_food_int_Desert)
glm_newfood_fac_Desert<-glm(Desertfactor~.-CensusTract,data = newfood,family = "binomial")
summary(glm_newfood_fac_Desert)
exp(glm_newfood_fac_Desert$coefficients)
## build an empty and full generalised linear model
#emptyglm<-glm(Desertfactor~1,data=newfood,family = binomial)
#summary(emptyglm)
#fullglm<-glm(Desertfactor~.-CensusTract,data=newfood,family = binomial)
#summary(fullglm)
#forwards<-step(emptyglm,scope=list(lower=formula(emptyglm),upper=formula(fullglm)),direction = "forward")
#formula(forwards)
#summary(forwards)
### The output of summary(forwards) indicates that variable 'TractNHOPI' has a p-value is 0.136183
#forwards_2<-glm(Desertfactor ~ MedianFamilyIncome + State + Urban + TractLOWI +
#   TractHUNV + TractHispanic + TractAsian + NUMGQTRS + TractAIAN +
#  TractKids + TractSNAP + TractSeniors + POP2010 + OHU2010 +
#   PovertyRate,data=newfood,family = binomial)
#summary(forwards_2)
food_coronly <- food[c("Desert","POP2010","OHU2010","NUMGQTRS","PovertyRate","MedianFamilyIncome","TractLOWI","TractKids","TractSeniors","TractWhite","TractBlack","TractAsian","TractNHOPI","TractAIAN","TractOMultir","TractHispanic","TractHUNV","TractSNAP")]
corr.food <- cor(food_coronly)
corrplot(corr.food, method = c("number"), type=c("upper"))
food_coronly <- food[c("Desert","POP2010","OHU2010","NUMGQTRS","PovertyRate","MedianFamilyIncome","TractLOWI","TractKids","TractSeniors","TractWhite","TractBlack","TractAsian","TractNHOPI","TractAIAN","TractOMultir","TractHispanic","TractHUNV","TractSNAP")]
corr.food <- cor(food_coronly)
corrplot(corr.food, method = c("number"), type=c("upper"), bg=c("black"))
food_coronly <- food[c("Desert","POP2010","OHU2010","NUMGQTRS","PovertyRate","MedianFamilyIncome","TractLOWI","TractKids","TractSeniors","TractWhite","TractBlack","TractAsian","TractNHOPI","TractAIAN","TractOMultir","TractHispanic","TractHUNV","TractSNAP")]
corr.food <- cor(food_coronly)
corrplot(corr.food)
View(corr.food)
